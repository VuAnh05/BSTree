
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
/**
 *
 * @author ADMIN
 */
public class MyString implements IString {

    @Override
    public int f1(String string) {
        int dem = 0;
        string = string.toLowerCase();
        String[] k = string.trim().split("\\s+");
        for (String x : k) {
            int cnt = 0;
            for (int i = 0; i < x.length(); i++) {
                if (x.charAt(i) != 'u' && x.charAt(i) != 'e' && x.charAt(i) != 'o'
                        && x.charAt(i) != 'a' && x.charAt(i) != 'i') {
                    cnt++;
                }
            }
            if (cnt >= 2) {
                dem++;
            }
        }
        return dem;
    }
    @Override
    public String f2(String string) {
        string = string.toLowerCase();
        String[] k = string.trim().split("\\s+");
        HashMap<Character, Integer> map = new HashMap<>();
        for (String x : k) {
            for (int i = 0; i < x.length(); i++) {
                if (map.containsKey(x.charAt(i))) {
                    map.put(x.charAt(i), map.get(x.charAt(i)) + 1);
                } else {
                    map.put(x.charAt(i), 1);
                }
            }
        }
        int dem = 0;
        StringBuilder sb = new StringBuilder();
        Set<Map.Entry<Character, Integer>> entrySet = map.entrySet();
        for (Map.Entry<Character, Integer> entry : entrySet) {
            if ( entry.getValue() >= 2){
                sb.append(entry.getKey());
                dem++;
            }
        }
        if ( dem != 0){
             char[] a = sb.toString().toCharArray();
        Arrays.sort(a);
        String res = String.valueOf(a);
        StringBuilder sb1 = new StringBuilder(res);
        return sb1.reverse().toString();
        }
        else{
            return "NO";
        }      
    }

}


