import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

// Lớp Flower
class Flower {
    private String name;
    private double price;
    private String color;

    public Flower(String name, double price, String color) {
        this.name = name;
        this.price = price;
        this.color = color;
    }

    public String getName() {
        return name;
    }

    public double getPrice() {
        return price;
    }

    public String getColor() {
        return color;
    }

    @Override
    public String toString() {
        return "Flower{" +
                "name='" + name + '\'' +
                ", price=" + price +
                ", color='" + color + '\'' +
                '}';
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        Flower flower = (Flower) obj;
        return Double.compare(flower.price, price) == 0 &&
                name.equals(flower.name) &&
                color.equals(flower.color);
    }
}

// Lớp ListFlower
class ListFlower {
    private ArrayList<Flower> a;

    public ListFlower() {
        this.a = new ArrayList<>();
    }

    // Phương thức thêm mới
    public void add(Flower flower) {
        a.add(flower);
    }

    // Phương thức hiển thị
    public void display() {
        for (Flower flower : a) {
            System.out.println(flower);
        }
    }

    // Phương thức sắp xếp giảm dần theo giá
    public void sort() {
        Collections.sort(a, new Comparator<Flower>() {
            @Override
            public int compare(Flower o1, Flower o2) {
                return Double.compare(o2.getPrice(), o1.getPrice());
            }
        });
    }

    // Phương thức tìm kiếm
    public boolean search(Flower flower) {
        return a.contains(flower);
    }
}

public class Main {
    public static void main(String[] args) {
        ListFlower listFlower = new ListFlower();

        // Thêm mới các loại hoa
        listFlower.add(new Flower("Hoa Hồng", 10000, "Đỏ"));
        listFlower.add(new Flower("Hoa Cúc", 5000, "Vàng"));
        listFlower.add(new Flower("Hoa Tulip", 20000, "Đỏ"));

        // Hiển thị danh sách hoa
        System.out.println("Danh sách hoa:");
        listFlower.display();

        // Sắp xếp giảm dần theo giá
        listFlower.sort();
        System.out.println("\nDanh sách hoa sau khi sắp xếp giảm dần theo giá:");
        listFlower.display();

        // Tìm kiếm hoa
        Flower flower = new Flower("Hoa Hồng", 10000, "Đỏ");
        System.out.println("\nKết quả tìm kiếm hoa 'Hoa Hồng': " + listFlower.search(flower));

        // Tìm kiếm hoa không tồn tại
        Flower flower2 = new Flower("Hoa Lan", 15000, "Trắng");
        System.out.println("\nKết quả tìm kiếm hoa 'Hoa Lan': " + listFlower.search(flower2));
    }
}
